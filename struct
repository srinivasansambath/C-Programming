

#include <stdio.h>

int main()
{
    struct emp 
    {
        int eid;
        char ename [20];
        float esal;
    };
    printf("%d %s %f",sizeof(e1.eid),sizeof(e1.ename),sizeof(e1.esal));
    return 0;
}
// OUTPUT:
/*Compilation error.
In this program compiilation error occurs beacuse only planning is done in struct block and no memory is created.
So when we are trying to check the size of operators we will get error.*/

// Program for struct
#include <stdio.h>

int main()
{
    struct emp 
    {
        int eid;
        char ename [20];
        float esal;
    };
    struct emp e1 ={1,"srini",1000000};
    printf("%d %s %f",e1.eid,e1.ename,e1.esal);
    

    return 0;
}
OUTPUT:
1 srini 1000000.000000

// program for struct
main()
{
    struct  emp 
    {
        int eid=10;
        char ename[20]="Dell";
        float esal=100000;
    };
    struct emp e1;
    printf("%d,%s,%f",e1.eid,e1.ename,e1.esal);
}

Output:
Compilation error occurs because values can't be initialized in struct where memory not created.

//Struct program related to garbage string
#include<stdio.h>
main()
{
    struct  emp 
    {
        int eid;
        char ename[20];
        float esal;
    };
    struct emp e1;
    e1.eid=10;
    e1.ename[20]="Dell";
    e1.esal=100000;

    printf("%d %s %f",e1.eid,e1.ename,e1.esal);
}
OUTPUT:
// Sometimes prints 10 GV 100000.0000000
sometimes compilation error occurs because of compilers.
// Reason : String can't be assigned into an char array directly.

#include<stdio.h>
main()
{
    struct  emp 
    {
        int eid;
        char ename[20];
        float esal;
    };
    struct emp e1;
    e1.eid=10;
    strcpy(e1.ename,"dell");
    e1.esal=100000;

    printf("%d %s %f",e1.eid,e1.ename,e1.esal);
}
OUTPUT:
10 dell 100000.000000

//C program to print details of a hero such as name and age using structure
#include <stdio.h>

int main()
{
    struct  hero
    {
        char hname[20];
        int hage;
    };
    struct hero h1 = {"srini",20};
    printf("%s %d",h1.hname,h1.hage);
    return 0;
}

OUTPUT:
srini 20

// An eg for nested struct program
#include <stdio.h>
#include<string.h>
int main()
{
    struct db 
    {
        int date;
        int m;
        int y;
    };
    struct  hero
    {
        char hname[20];
        int hage;
        struct db d;
    };
    struct hero h1;
    strcpy(h1.hname,"srini");
    h1.hage=20;
    h1.d.date = 15;
    h1.d.m= 03;
    h1.d.y= 2002;
    printf("%s %d %d-%d-%d",h1.hname,h1.hage,h1.d.date,h1.d.m,h1.d.y);
    return 0;
}
OUTPUT:
srini 20 15-3-2002
//Before program also same date of birth is printed but here, we are printing the d o b by using another struct.

// Struct program
#include <stdio.h>

int main()
{
    struct emp {
        int eid;
        char ename[20];
        float esal;
    };
    test();
    return 0;
}
test()
{
    struct emp e1;
    e1.eid=25;
    strcpy(e1.ename,"x");
    e1.esal=10000;
    printf("%d %s %f",e1.eid,e1.ename,e1.esal);
}
OUTPUT:
Compilation error occurs.
/*Error is occured because , struct variable is created out of the main function.
Struct variable should be created within the main function.*/

//
struct variable needs to be created only in the same block where structure body is present.

#include <stdio.h>
#include<string.h>
void test();
int main()
{
    
    test();
    return 0;
}
void test()
{
    struct emp {
        int eid;
        char ename[20];
        float esal;
    };
    struct emp e1;
    e1.eid=25;
    strcpy(e1.ename,"x");
    e1.esal=10000;
    printf("%d %s %f",e1.eid,e1.ename,e1.esal);
}

OUTPUT:
25 x 10000.000000
